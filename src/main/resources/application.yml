spring:

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/test
    username: root
    password: password

  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    generate-ddl: true
    show-sql: true
    hibernate:
      ddl-auto: create

custom:
  config:
    oauth:
      social:

        base_url: http://localhost:8080

        google:
          client_id: [ CLIENT ID ]
          client_secret: [ CLIENT SECRET ]
          callback_path: /oauth/google/callback

          authorization_uri: https://accounts.google.com/o/oauth2/v2/auth
          token_uri: https://oauth2.googleapis.com/token
          user_info_uri: https://oauth2.googleapis.com/tokeninfo


        # facebook 개발자 센터에서 테스트용 앱을 구성하는 방법이 다르며 개발자 센터에서 만들어진 앱마다 발급받는 사용자 id값이 모두 다름
        facebook:
          client_id: [ CLIENT ID ]
          client_secret: [ CLIENT SECRET ]
          callback_path: /oauth/facebook/callback

          authorization_uri: https://www.facebook.com/v11.0/dialog/oauth
          token_uri: https://graph.facebook.com/v11.0/oauth/access_token
          # Case 1) https://graph.facebook.com/v11.0/me?access_token={access_token}
          # Case 2) graph.facebook.com/debug_token?input_token={token-to-inspect}&access_token={app-token-or-admin-token}
          # 첫 번째 uri의 경우 간단하게 name과 id의 정보만 출력. 간단하게 매핑을 처리할 수 있음
          # 두 번째 uri의 경우 사용자의 정보를 더 많이 출력. 단, 출력되는 데이터의 구조상 매핑처리가 불편할 수 있음
          user_info_uri: https://graph.facebook.com/v11.0/me


        # Apple은 localhost에서 동작하지 않기 때문에 직접 서버에 올려서 테스트를 진행
        apple:
          client_id: [ CLIENT ID (org.example.apple) ]
          team_id: [ TEAM ID ]
          # Private key는 직접 생성
          callback_path: /oauth/apple/callback

          authorization_uri: https://appleid.apple.com/auth/authorize
          token_uri: https://appleid.apple.com/auth/token
          public_key: https://appleid.apple.com/auth/keys


        kakao:
          client_id: [ REST API Key ]
          callback_path: /oauth/kakao/callback

          authorization_uri: https://kauth.kakao.com/oauth/authorize
          token_uri: https://kauth.kakao.com/oauth/token
          user_info_uri: https://kapi.kakao.com/v2/user/me


        naver:
          client_id: [ CLIENT ID ]
          client_secret: [ CLIENT SECRET ]
          callback_path: /oauth/naver/callback

          authorization_uri: https://nid.naver.com/oauth2.0/authorize
          token_uri: https://nid.naver.com/oauth2.0/token
          user_info_uri: https://openapi.naver.com/v1/nid/me